window.Juzaweb || (window.Juzaweb = {}),
function () {
    (Juzaweb.Utility = {
        getParameter: function (t) {
            t = t.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var e = new RegExp("[\\?&]" + t + "=([^&#]*)").exec(
                location.search
            );
            return null === e
                ? ""
                : decodeURIComponent(e[1].replace(/\+/g, " "));
        },
    }),
        (Juzaweb.Template = {
            SHIPPING_METHOD:
                '<div class="content-box__row"><div class="radio-wrapper"><div class="radio__input"><input class="input-radio" type="radio" value="{{shipping_method_value}}" name="ShippingMethod" id="shipping_method_{{shipping_method_id}}" bind="shippingMethod" bind-event-change="changeShippingMethod()" fee="{{shipping_method_fee}}" /></div><label class="radio__label" for="shipping_method_{{shipping_method_id}}"> <span class="radio__label__primary">{{shipping_method_name}}</span><span class="radio__label__accessory"><span class="content-box__emphasis">{{shipping_method_fee_text}}</span></span></label> </div> \x3c!-- /radio-wrapper--\x3e </div>',
        }),
        (Juzaweb.StoreCheckout = (function () {
            function t(t, e) {
                e || (e = {}),
                    (this.ele = t),
                    (this.existCode = e.existCode),
                    (this.totalOrderItemPrice = e.totalOrderItemPrice),
                    (this.discount = e.discount),
                    (this.shippingFee = e.shippingFee),
                    (this.freeShipping = e.freeShipping),
                    (this.requiresShipping = e.requiresShipping),
                    (this.code = e.code),
                    (this.inValidCode = !1),
                    (this.applyWithPromotion = !0),
                    (this.discountShipping = !1),
                    (this.loadedShippingMethods = !1),
                    (this.settingLanguage = e.settingLanguage),
                    (this.invalidEmail = !1),
                    (this.moneyFormat = e.moneyFormat),
                    (this.discountLabel = e.discountLabel),
                    (this.districtPolicy = e.districtPolicy),
                    (this.district = e.district),
                    (this.wardPolicy = e.wardPolicy),
                    (this.ward = e.ward),
                    (this.billingLatLng = {}),
                    (this.shippingLatLng = {}),
                    this.checkToEnableScrollIndicator(),
                    (this.customerAddress = null),
                    (this.province = e.province),
                    (this.token = e.token),
                    (this.email = e.email),
                    (this.otherAddress = e.otherAddress),
                    (this.shippingId = e.shippingId),
                    (this.shippingMethods = e.shippingMethods),
                    (this.shippingMethodsLoading = !1),
                    (this.$ajax = null),
                    (this.$calculateFee = null),
                    (this.ajaxAbandonedTimeout = null),
                    this.bindRequiredOtherAddress(),
                    (this.reduction_code = "" != e.reductionCode);
            }
            return (
                (t.prototype.bindRequiredOtherAddress = function () {
                    this.otherAddress
                        ? ($("#_shipping_address_last_name").prop(
                              "required",
                              !0
                          ),
                          $("#_shipping_address_phone").prop(
                              "required",
                              !0
                          ),
                          $("#_shipping_address_address1").prop(
                              "required",
                              !0
                          ),
                          $("#shippingProvince").prop("required", !0),
                          $("#shippingDistrict").prop("required", !0),
                          $("#shippingWard").prop("required", !0))
                        : ($("#_shipping_address_last_name").removeAttr(
                              "required"
                          ),
                          $("#_shipping_address_phone").removeAttr(
                              "required"
                          ),
                          $("#_shipping_address_address1").removeAttr(
                              "required"
                          ),
                          $("#shippingProvince").removeAttr("required"),
                          $("#shippingDistrict").removeAttr("required"),
                          $("#shippingWard").removeAttr("required"));
                }),
                (t.prototype.handleClick = function (t) {
                    $(t)
                        .closest(".field__input-wrapper")
                        .find(".field__input")
                        .focus();
                }),
                (t.prototype.handleFocus = function (t) {
                    $(t)
                        .closest(".field__input-wrapper")
                        .addClass("js-is-focused");
                }),
                (t.prototype.handleFieldBlur = function (t) {
                    $(t)
                        .closest(".field__input-wrapper")
                        .removeClass("js-is-focused");
                }),
                (t.prototype.checkToEnableScrollIndicator = function () {
                    var t = $(".summary-product"),
                        e = $(".product-table");
                    t.height() < e.height() &&
                        (t.addClass("order-summary--is-scrollable"),
                        $(".order-summary--is-scrollable").scroll(
                            function () {
                                $(this).removeClass(
                                    "order-summary--is-scrollable"
                                );
                            }
                        ));
                }),
                (t.prototype.changeCustomerAddress = function (t) {
                    t.id ||
                        ((t = {
                            address1: null,
                            address2: null,
                            city: "",
                            full_name: "",
                            phone: "",
                            province: "",
                            province_code: "",
                            district: "",
                            district_code: "",
                            ward: "",
                            ward_code: "",
                        }),
                        (this.billing_address = t),
                        (this.shipping_address = t)),
                        (this.customerAddress = t),
                        $("select[name='BillingProvinceId'] option")
                            .filter(function () {
                                return $(this).text() == t.city;
                            })
                            .prop("selected", !0)
                            .trigger("change");
                }),
                (t.prototype.changeEmail = function () {
                    (function (t) {
                        return /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(
                            t
                        );
                    })($("#_email").val()) &&
                        (this.code && this.caculateShippingFee(),
                        this.abandonedCheckout());
                }),
                (t.prototype.saveAbandoned = function () {
                    this.abandonedCheckout();
                }),
                (t.prototype.billingCountryChange = function (t) {
                    if (!this.ortherAddress) {
                        var e = this;
                        if (this.show_country) {
                            var i =
                                "/checkout/getprovinces/" +
                                (e.BillingCountryId
                                    ? e.BillingCountryId
                                    : "none");
                            t && (i += "&designThemeId=" + t),
                                $.ajax({
                                    url: i,
                                    success: function (t) {
                                        for (
                                            var i =
                                                    "<option value=''>--- " +
                                                    code_langs.choose_province +
                                                    " ---</option>",
                                                n = 0;
                                            n < t.length;
                                            n++
                                        ) {
                                            var o = t[n],
                                                s =
                                                    e.province === o.name ||
                                                    (null !=
                                                        e.customerAddress &&
                                                        e.customerAddress
                                                            .province ===
                                                            o.name);
                                            i +=
                                                "<option value='" +
                                                o.id +
                                                "'" +
                                                (s
                                                    ? "selected='selected'"
                                                    : "") +
                                                ">" +
                                                o.name +
                                                "</option>";
                                        }
                                        $(
                                            "select[name='BillingProvinceId']"
                                        )
                                            .empty()
                                            .html(i),
                                            $(
                                                "select[name='BillingProvinceId']"
                                            ).trigger("change");
                                    },
                                });
                        }
                    }
                }),
                (t.prototype.billingProviceChange = function (t) {
                    if (!this.otherAddress) {
                        var e = this;
                        if (this.show_district) {
                            var i =
                                "/checkout/getdistricts?provinceId=" +
                                e.BillingProvinceId;
                            t && (i += "&designThemeId=" + t),
                                $.ajax({
                                    url: i,
                                    success: function (t) {
                                        for (
                                            var i =
                                                    "<option value=''>---  ---</option>",
                                                n = 0;
                                            n < t.length;
                                            n++
                                        ) {
                                            var o = t[n],
                                                s =
                                                    e.district === o.name ||
                                                    (null !=
                                                        e.customerAddress &&
                                                        e.customerAddress
                                                            .district ===
                                                            o.name);
                                            i +=
                                                "<option value='" +
                                                o.id +
                                                "'" +
                                                (s
                                                    ? "selected='selected'"
                                                    : "") +
                                                ">" +
                                                o.name +
                                                "</option>";
                                        }
                                        $(
                                            "select[name='BillingDistrictId']"
                                        )
                                            .empty()
                                            .html(i),
                                            $(
                                                "select[name='BillingDistrictId']"
                                            ).trigger("change");
                                    },
                                });
                        } else this.caculateShippingFee(t);
                    }
                    this.abandonedCheckout();
                }),
                (t.prototype.caculateShippingFee = function (t) {
                    null != this.$calculateFee &&
                        this.$calculateFee.abort();
                    var e = this;
                    if ("vi" != this.settingLanguage)
                        var i = 0,
                            n = 0;
                    else
                        (i = e.otherAddress
                            ? e.ShippingProvinceId
                            : e.BillingProvinceId),
                            (n = e.otherAddress
                                ? e.ShippingDistrictId
                                : e.BillingDistrictId);
                    var o = $("[name='ShippingMethod']:checked").val(),
                        s = $("#_email").val(),
                        r = "/checkout/getshipping/" + e.token;
                    return (
                        t && (r += "?designThemeId=" + t),
                        (data = {
                            provinceId: i,
                            districtId: n,
                            code: e.code,
                            shippingMethod: o,
                            email: s,
                        }),
                        this.reduction_code && (data.code = null),
                        (this.shippingMethodsLoading = !0),
                        Twine.refreshImmediately(),
                        (this.$calculateFee = $.ajax({
                            url: r,
                            type: "POST",
                            data: data,
                            success: function (t) {
                                if (
                                    ((e.loadedShippingMethods = !0),
                                    t.error)
                                )
                                    (e.shippingMethods = []),
                                        Twine.refreshImmediately();
                                else {
                                    for (var i in ((e.existCode =
                                        t.exist_code),
                                    !e.code ||
                                    e.existCode ||
                                    e.reduction_code
                                        ? ((e.inValidCode = !1),
                                          (e.applyWithPromotion =
                                              t.apply_with_promotion))
                                        : ((e.inValidCode = !e.existCode),
                                          (e.applyWithPromotion = !0)),
                                    (e.freeShipping = t.free_shipping),
                                    (e.discount = t.discount),
                                    (e.totalOrderItemPrice =
                                        t.total_line_item_price),
                                    (e.totalPrice = t.total_price),
                                    e.requiresShipping &&
                                        (e.shippingMethods =
                                            t.shipping_methods),
                                    (e.discountShipping =
                                        t.discount_shipping),
                                    $(
                                        ".shipping-method .content-box"
                                    ).empty(),
                                    e.shippingMethods)) {
                                        var n = e.shippingMethods[i],
                                            o =
                                                Juzaweb.Template.SHIPPING_METHOD.replace(
                                                    /{{shipping_method_value}}/g,
                                                    n.value
                                                );
                                        (o = (o = (o = (o = o.replace(
                                            /{{shipping_method_name}}/g,
                                            n.name
                                        )).replace(
                                            /{{shipping_method_fee}}/g,
                                            n.fee
                                        )).replace(
                                            /{{shipping_method_id}}/g,
                                            n.id
                                        )).replace(
                                            /{{shipping_method_fee_text}}/g,
                                            0 != n.fee
                                                ? n.fee
                                                : e.discountLabel
                                        )),
                                            $(
                                                ".shipping-method .content-box"
                                            ).append(o);
                                    }
                                    (e.shippingMethodsLoading = !1),
                                        Twine.unbind(
                                            $(
                                                ".shipping-method .content-box"
                                            ).get(0)
                                        ),
                                        Twine.bind(
                                            $(
                                                ".shipping-method .content-box"
                                            ).get(0)
                                        ),
                                        Twine.refreshImmediately(),
                                        $(
                                            "[name=ShippingMethod][value='" +
                                                t.shipping_method +
                                                "']"
                                        ).click(),
                                        e.applyShippingMethod();
                                }
                            },
                            error: function () {
                                e.shippingMethodsLoading = !1;
                            },
                        })),
                        !1
                    );
                }),
                (t.prototype.shippingCountryChange = function (t) {
                    if (!this.ortherAddress) {
                        var e = this;
                        if (this.show_country) {
                            var i =
                                "/checkout/getprovinces?countryId=" +
                                e.ShippingCountryId;
                            t && (i += "&designThemeId=" + t),
                                $.ajax({
                                    url: i,
                                    success: function (t) {
                                        for (
                                            var i =
                                                    "<option value=''>--- Choose a province ---</option>",
                                                n = 0;
                                            n < t.length;
                                            n++
                                        ) {
                                            var o = t[n],
                                                s =
                                                    e.province === o.name ||
                                                    (null !=
                                                        e.customerAddress &&
                                                        e.customerAddress
                                                            .province ===
                                                            o.name);
                                            i +=
                                                "<option value='" +
                                                o.id +
                                                "'" +
                                                (s
                                                    ? "selected='selected'"
                                                    : "") +
                                                ">" +
                                                o.name +
                                                "</option>";
                                        }
                                        $(
                                            "select[name='ShippingProvinceId']"
                                        )
                                            .empty()
                                            .html(i),
                                            $(
                                                "select[name='ShippingProvinceId']"
                                            ).trigger("change");
                                    },
                                });
                        }
                    }
                }),
                (t.prototype.shippingProviceChange = function (t) {
                    if (this.otherAddress) {
                        this.show_district
                            ? this.showShippingDistrict(t)
                            : this.caculateShippingFee(t);
                    } else {
                        !(
                            $("select[name='ShippingDistrictId'] >option")
                                .length > 0
                        ) &&
                            this.show_district &&
                            this.showShippingDistrict(t);
                    }
                }),
                (t.prototype.showShippingDistrict = function (t) {
                    var e = this,
                        i =
                            "/checkout/getdistricts?provinceId=" +
                            e.ShippingProvinceId;
                    t && (i += "&designThemeId=" + t),
                        $.ajax({
                            url: i,
                            async: !1,
                            success: function (t) {
                                for (
                                    var i =
                                            "<option value=''>--- Select district ---</option>",
                                        n = 0;
                                    n < t.length;
                                    n++
                                ) {
                                    var o = t[n],
                                        s = e.district === o.name;
                                    i +=
                                        "<option value='" +
                                        o.id +
                                        "'" +
                                        (s ? "selected='selected'" : "") +
                                        ">" +
                                        o.name +
                                        "</option>";
                                }
                                $("select[name='ShippingDistrictId']")
                                    .empty()
                                    .html(i),
                                    $(
                                        "select[name='ShippingDistrictId']"
                                    ).trigger("change");
                            },
                        }),
                        this.abandonedCheckout();
                }),
                (t.prototype.showShippingWard = function (t) {
                    if (
                        null != this.ShippingDistrictId &&
                        this.ShippingDistrictId > 0
                    ) {
                        var e = this,
                            i =
                                "/checkout/getwards?districtId=" +
                                e.ShippingDistrictId;
                        t && (i += "&designThemeId=" + t),
                            $.ajax({
                                url: i,
                                async: !1,
                                success: function (t) {
                                    for (
                                        var i =
                                                "<option value=''>--- Choose a ward ---</option>",
                                            n = 0;
                                        n < t.length;
                                        n++
                                    ) {
                                        var o = t[n],
                                            s = e.ward === o.name;
                                        i +=
                                            "<option value='" +
                                            o.id +
                                            "'" +
                                            (s
                                                ? "selected='selected'"
                                                : "") +
                                            ">" +
                                            o.name +
                                            "</option>";
                                    }
                                    $("select[name='ShippingWardId']")
                                        .empty()
                                        .html(i),
                                        $(
                                            "select[name='ShippingWardId']"
                                        ).trigger("change");
                                },
                            });
                    }
                }),
                (t.prototype.calculateFeeAndSave = function (t) {
                    this.caculateShippingFee(t), this.abandonedCheckout();
                }),
                (t.prototype.shippingDistrictChange = function (t) {
                    this.otherAddress
                        ? (this.caculateShippingFee(t),
                          this.show_ward && this.showShippingWard(t),
                          this.abandonedCheckout())
                        : $("select[name='ShippingWardId'] >option")
                              .length <= 0 &&
                          this.show_ward &&
                          this.showShippingWard(t);
                }),
                (t.prototype.billingDistrictChange = function (t) {
                    if (!this.otherAddress) {
                        if (
                            (this.caculateShippingFee(t),
                            null != this.BillingDistrictId &&
                                this.BillingDistrictId > 0)
                        ) {
                            var e = this;
                            if (this.show_ward) {
                                var i =
                                    "/checkout/getwards?districtId=" +
                                    e.BillingDistrictId;
                                t && (i += "&designThemeId=" + t),
                                    $.ajax({
                                        url: i,
                                        success: function (t) {
                                            for (
                                                var i =
                                                        "<option value=''>--- Choose a ward ---</option>",
                                                    n = 0;
                                                n < t.length;
                                                n++
                                            ) {
                                                var o = t[n],
                                                    s =
                                                        e.ward === o.name ||
                                                        (null !=
                                                            e.customerAddress &&
                                                            e
                                                                .customerAddress
                                                                .ward ===
                                                                o.name);
                                                i +=
                                                    "<option value='" +
                                                    o.id +
                                                    "'" +
                                                    (s
                                                        ? "selected='selected'"
                                                        : "") +
                                                    ">" +
                                                    o.name +
                                                    "</option>";
                                            }
                                            $(
                                                "select[name='BillingWardId']"
                                            )
                                                .empty()
                                                .html(i),
                                                $(
                                                    "select[name='BillingWardId']"
                                                ).trigger("change");
                                        },
                                    });
                            }
                        }
                        this.abandonedCheckout();
                    }
                }),
                (t.prototype.shippingWardChange = function () {
                    this.otherAddress && this.abandonedCheckout();
                }),
                (t.prototype.billingWardChange = function () {
                    this.otherAddress || this.abandonedCheckout();
                }),
                (t.prototype.changeOtherAddress = function (t) {
                    (t.value = this.otherAddress),
                        this.otherAddress
                            ? ($("#_shipping_address_last_name").prop(
                                  "required",
                                  !0
                              ),
                              $("#_shipping_address_phone").prop(
                                  "required",
                                  !0
                              ),
                              $("#_shipping_address_address1").prop(
                                  "required",
                                  !0
                              ),
                              $("#shippingProvince").prop("required", !0),
                              $("#shippingDistrict").prop("required", !0),
                              $("#shippingWard").prop("required", !0),
                              $(
                                  "select[name='ShippingProvinceId']"
                              ).trigger("change"))
                            : ($(".help-block.with-errors > ul").length >
                                  0 && $(".help-block.with-errors").empty(),
                              $("#_shipping_address_last_name").removeAttr(
                                  "required"
                              ),
                              $("#_shipping_address_phone").removeAttr(
                                  "required"
                              ),
                              $("#_shipping_address_address1").removeAttr(
                                  "required"
                              ),
                              $("#shippingProvince").removeAttr("required"),
                              $("#shippingDistrict").removeAttr("required"),
                              $("#shippingWard").removeAttr("required"),
                              $("select[name='BillingProvinceId']").trigger(
                                  "change"
                              )),
                        this.abandonedCheckout();
                }),
                (t.prototype.applyShippingMethod = function () {
                    this.shippingMethod = $(
                        "[name='ShippingMethod']:checked"
                    ).val();
                    var t = parseFloat(
                        $("[name='ShippingMethod']:checked").attr("fee")
                    );
                    this.discountShipping
                        ? t <= 0
                            ? ((this.freeShipping = !0),
                              (this.discount = t))
                            : ((this.freeShipping = !1),
                              (this.discount = 0))
                        : (this.freeShipping = t <= 0),
                        (this.shippingFee = $(
                            "[name='ShippingMethod']:checked"
                        ).attr("fee")),
                        Twine.refreshImmediately();
                }),
                (t.prototype.changeShippingMethod = function () {
                    this.shippingMethod = $(
                        "[name='ShippingMethod']:checked"
                    ).val();
                    var t = parseFloat(
                        $("[name='ShippingMethod']:checked").attr("fee")
                    );
                    this.discountShipping
                        ? t <= 0
                            ? ((this.freeShipping = !0),
                              (this.discount = t))
                            : ((this.freeShipping = !1),
                              (this.discount = 0))
                        : (this.freeShipping = t <= 0),
                        (this.shippingFee = $(
                            "[name='ShippingMethod']:checked"
                        ).attr("fee")),
                        Twine.refreshImmediately();
                }),
                (t.toggleOrderSummary = function (t) {
                    var e = $(t),
                        i = $(".order-summary--product-list");
                    i.wrapInner("<div />");
                    var n = i.height(),
                        o = i.find("> div").height(),
                        s = 0 === n ? o : 0;
                    i.css("height", n),
                        i.find("> div").contents().unwrap(),
                        setTimeout(function () {
                            e.toggleClass("order-summary-toggle--hide"),
                                i.toggleClass(
                                    "order-summary--is-collapsed"
                                ),
                                i.addClass("order-summary--transition"),
                                i.css("height", s);
                        }, 0),
                        i.one(
                            "webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd",
                            function (t) {
                                i.is(t.target) &&
                                    (i.removeClass(
                                        "order-summary--transition"
                                    ),
                                    i.removeAttr("style"));
                            }
                        );
                }),
                (t.prototype.removeCode = function (t) {
                    (this.code = ""), this.caculateShippingFee(t);
                }),
                (t.prototype.paymentCheckout = function (t) {
                    $(".btn-checkout").button("loading");
                    this.returnCheckout();
                }),
                (t.prototype.loadScriptGoogleMapApi = function (t, e) {
                    jQuery.ajax({
                        timeout: 3e3,
                        url: t,
                        dataType: "script",
                        async: !0,
                        global: !1,
                        success: function () {
                            e(!0);
                        },
                        error: function () {
                            e(!1);
                        },
                    });
                }),
                (t.prototype.getBillingAddress = function () {
                    var t = this,
                        e = "";
                    if (
                        (t.billing_address.address1 &&
                            (e += t.billing_address.address1 + ", "),
                        t.BillingWardId)
                    ) {
                        var i = $("#billingWard").find(":selected").text();
                        i && (e += i + ", ");
                    }
                    if (t.BillingDistrictId) {
                        var n = $("#billingDistrict")
                            .find(":selected")
                            .text();
                        n && (e += n + ", ");
                    }
                    if (t.BillingProvinceId) {
                        var o = $("#billingProvince")
                            .find(":selected")
                            .text();
                        o && (e += o);
                    }
                    if (t.BillingCountryId) {
                        var s = $("#billingCountry")
                            .find(":selected")
                            .text();
                        s && (e += ", " + s);
                    }
                    return e;
                }),
                (t.prototype.getShippingAddress = function () {
                    var t = this,
                        e = "";
                    if (
                        (t.shipping_address.address1 &&
                            (e += t.shipping_address.address1 + ", "),
                        t.ShippingWardId)
                    ) {
                        var i = $("#shippingWard").find(":selected").text();
                        i && (e += i + ", ");
                    }
                    if (t.ShippingDistrictId) {
                        var n = $("#shippingDistrict")
                            .find(":selected")
                            .text();
                        n && (e += n + ", ");
                    }
                    if (t.ShippingProvinceId) {
                        var o = $("#shippingProvince")
                            .find(":selected")
                            .text();
                        o && (e += o);
                    }
                    if (t.ShippingCountryId) {
                        var s = $("#shippingCountry")
                            .find(":selected")
                            .text();
                        s && (e += ", " + s);
                    }
                    return e;
                }),
                (t.prototype.toggle = function (t, e) {
                    var i = $(t),
                        n = $(e);
                    n.wrapInner("<div />");
                    var o = n.height(),
                        s = n.find("> div").height(),
                        r = 0 === o ? s : 0;
                    n.css("height", o),
                        n.find("> div").contents().unwrap(),
                        setTimeout(function () {
                            i.toggleClass("open"),
                                n.toggleClass(
                                    "mobile--is-expanded mobile--is-collapsed"
                                ),
                                n.addClass("mobile--transition"),
                                n.css("height", r);
                        }, 0),
                        n.one(
                            "webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd",
                            function (t) {
                                n.is(t.target) &&
                                    (n.removeClass("mobile--transition"),
                                    n.removeAttr("style"));
                            }
                        );
                }),
                (t.prototype.getLatLong = function (t, e) {
                    (t = t || ""),
                        "undefined" != typeof google
                            ? ((geocoder = new google.maps.Geocoder()),
                              geocoder && geocoder.geocode
                                  ? geocoder.geocode(
                                        { address: t },
                                        function (t, i) {
                                            i ==
                                            google.maps.GeocoderStatus.OK
                                                ? e(t[0])
                                                : e(!1);
                                        }
                                    )
                                  : e(!1))
                            : e(!1);
                }),
                (t.prototype.setBillingLatLng = function (t) {
                    0 == t
                        ? ((this.billingLatLng.Lat = ""),
                          (this.billingLatLng.Lng = ""))
                        : ((this.billingLatLng.Lat =
                              t.geometry.location.lat()),
                          (this.billingLatLng.Lng =
                              t.geometry.location.lng()));
                }),
                (t.prototype.returnCheckout = function () {
                    var t = $("form.formCheckout");
                    if (
                        (t.validator("validate"),
                        $(".help-block.with-errors > ul").length <= 0)
                    ) {
                        let e = t.attr("action"),
                            n = "POST";
                        $.ajax({
                            url: e,
                            type: n,
                            global: !0,
                            data: t.serialize(),
                        })
                            .done(function (t) {
                                if (1 == t.status)
                                    window.location.href = t.data.redirect;
                                else {
                                    let e = "";
                                    if (
                                        null != t.errors &&
                                        t.errors.length > 0
                                    )
                                        for (
                                            i = 0;
                                            i < t.errors.length;
                                            i++
                                        )
                                            e +=
                                                "<li>" +
                                                t.errors[i] +
                                                "</li>";
                                    else e += "<li>" + t.message + "</li>";
                                    $(
                                        ".sidebar__content .has-error .help-block > ul"
                                    ).html(e),
                                        $(".btn-checkout").button("reset");
                                }
                                return !1;
                            })
                            .fail(function (t) {
                                let e = t.responseJSON,
                                    n = "";
                                if (null != e.errors && e.errors.length > 0)
                                    for (i = 0; i < e.errors.length; i++)
                                        n += "<li>" + e.errors[i] + "</li>";
                                else n += "<li>" + e.message + "</li>";
                                return (
                                    $(
                                        ".sidebar__content .has-error .help-block > ul"
                                    ).html(n),
                                    $(".btn-checkout").button("reset"),
                                    !1
                                );
                            });
                    } else $(".btn-checkout").button("reset");
                }),
                (t.prototype.abandonedCheckout = function () {
                    var t = $("form.formCheckout"),
                        e = window.location.href;
                    null != this.$ajax && this.$ajax.abort(),
                        null != this.ajaxAbandonedTimeout &&
                            clearTimeout(this.ajaxAbandonedTimeout);
                    var i = this;
                    this.ajaxAbandonedTimeout = setTimeout(function () {
                        i.$ajax = $.ajax({
                            url: e,
                            type: "POST",
                            global: !1,
                            data: t.serialize() + "&_method=patch",
                            success: function (t) {},
                        });
                    }, 3e3);
                }),
                t
            );
        })()),
        (Juzaweb.CheckoutProblems = (function () {
            function t(t, e) {
                e || (e = {}), (this.token = e.token);
            }
            return (
                (t.prototype.removeItem = function (t) {
                    var e = $(t).parent("form.edit_checkout");
                    $.ajax({
                        url: "/checkout/" + this.token,
                        type: "POST",
                        data: e.serialize(),
                        success: function (t) {
                            window.location = "/checkout/" + t.token;
                        },
                    });
                }),
                (t.prototype.continueCheckout = function () {
                    var t = $("#form_stock_problems_to_checkout");
                    $.ajax({
                        url: "/checkout/" + this.token,
                        type: "POST",
                        async: !1,
                        data: t.serialize(),
                        success: function (t) {
                            window.location = "/checkout/" + t.token;
                        },
                    });
                }),
                t
            );
        })()),
        (Juzaweb.PaymentStatus = (function () {
            function t(t, e) {
                return function () {
                    return t.apply(e, arguments);
                };
            }
            function e(e, i) {
                if (null != i) for (var n in i) this[n] = i[n];
                if (
                    ((this.element = e),
                    (this.countdown = t(this.countdown, this)),
                    (this.pollingResult = t(this.pollingResult, this)),
                    "true" === this.payment_processing &&
                        "17" == this.payment_provider_id)
                ) {
                    (this.zaloData = this.payment_info),
                        (this.remaining = parseInt(
                            this.zaloData.remaining_duration
                        ));
                    var o = 30 - Math.ceil(this.remaining / 10);
                    this.startPollingPaymentStatus(o);
                }
            }
            return (
                (e.prototype.startPaymentTimer = function () {
                    (this.qrTimer = $(".qr-timer")),
                        (this.timerInterval = 1e3),
                        (this.expected = Date.now() + this.timerInterval),
                        (this.currentTimeout = setTimeout(
                            this.countdown,
                            this.timerInterval
                        ));
                }),
                (e.prototype.stopPaymentTimer = function () {
                    clearTimeout(this.currentTimeout);
                }),
                (e.prototype.countdown = function () {
                    var t = 0;
                    if (this.remaining > 0) {
                        var e = Date.now() - this.expected;
                        if (e > this.timerInterval) {
                            var i = e / this.timerInterval;
                            (t = Math.floor(i - 1)), (this.remaining -= t);
                        }
                        --this.remaining,
                            this.qrTimer.text(this.remaining),
                            (this.expected +=
                                t * this.timerInterval +
                                this.timerInterval),
                            (this.currentTimeout = setTimeout(
                                this.countdown,
                                Math.max(
                                    0,
                                    t * this.timerInterval +
                                        this.timerInterval -
                                        e
                                )
                            ));
                    } else {
                        this.stopPaymentTimer();
                        var n = this.zaloData.order_id;
                        setTimeout(function () {
                            window.location.href = "/checkout/failure/" + n;
                        }, 1e3);
                    }
                }),
                (e.prototype.startPollingPaymentStatus = function (t) {
                    null == t && (t = 0),
                        (this.pollingCount = t),
                        (this.currentInterval = setInterval(
                            this.pollingResult,
                            1e4
                        ));
                }),
                (e.prototype.pollingResult = function () {
                    if (!this.zaloData || !this.zaloData.app_trans_id)
                        return this.stopPollingPaymentStatus(), !1;
                    this.pollingRequestSending &&
                        null !== this.currentPollingRequest &&
                        void 0 !== this.currentPollingRequest &&
                        this.currentPollingRequest.abort(),
                        (this.pollingRequestSending = !0),
                        (this.pollingCount += 1);
                    var t = this;
                    this.currentPollingRequest = $.ajax({
                        url: "/zalopay/checkpaymentstatus",
                        method: "POST",
                        contentType: "application/json; charset=utf-8",
                        timeout: 1e4,
                        global: !1,
                        data: JSON.stringify({
                            app_trans_id: this.zaloData.app_trans_id,
                        }),
                        success: function (e) {
                            1 == e.return_code
                                ? (window.location.href =
                                      "/checkout/thankyou/" +
                                      t.zaloData.order_token)
                                : -117 != e.return_code &&
                                  -49 != e.return_code &&
                                  e.return_code <= 0 &&
                                  setTimeout(function () {
                                      window.location.href =
                                          "/checkout/failure/" +
                                          t.zaloData.order_id;
                                  }, 1e3);
                        },
                        error: function () {},
                        complete: function (e, i) {
                            (t.pollingRequestSending = !1),
                                "abort" == i &&
                                    console.log("abort request"),
                                (t.remaining <= 0 ||
                                    t.pollingCount >= 30) &&
                                    (t.stopPollingPaymentStatus(),
                                    setTimeout(function () {
                                        window.location.href =
                                            "/checkout/cancelled/" +
                                            t.zaloData.order_id;
                                    }, 500));
                        },
                    });
                }),
                (e.prototype.stopPollingPaymentStatus = function () {
                    clearInterval(this.currentInterval);
                }),
                e
            );
        })());
}.call(this);
